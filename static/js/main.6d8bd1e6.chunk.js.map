{"version":3,"sources":["filter/Filter.js","comments/Comment.js","comments/CommentList.js","posts/Post.js","user/User.js","posts/PostList.js","mainApp/App.js","helper/Helper.js","index.js"],"names":["Filter","_ref","onFilter","showAll","react_default","a","createElement","className","onSubmit","event","target","filterInput","value","preventDefault","type","name","onClick","Comment","comment","email","body","CommentList","comments","map","src_comments_Comment","key","id","Post","post","Fragment","title","User","user","concat","username","address","zipcode","city","street","suite","PostList","posts","src_posts_Post","src_user_User","comments_CommentList","prepareData","users","currentPost","Object","objectSpread","find","userId","filter","postId","App","state","shownPosts","btnVisible","btnText","visible","findPostByText","text","findedPosts","_this","includes","setState","showAllPosts","fetch","then","res","json","this","_this2","getPosts","length","src_filter_Filter","posts_PostList","react_md_spinner_esm","size","React","Component","ReactDOM","render","src_mainApp_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d8bd1e6.chunk.js","sourcesContent":["import React from 'react';\nimport './Filter.css';\n\nconst Filter = ({ onFilter, showAll }) => {\n  return (\n    <form \n      className=\"filter\" \n      onSubmit={(event) => {\n        onFilter(event.target.filterInput.value);\n        event.target.filterInput.value = '';\n        event.preventDefault();\n      }}\n    >\n      <div className=\"block\">\n        <input \n          className=\"filter-input\" \n          type=\"text\" \n          name=\"filterInput\" />\n        <label className=\"filter-label\">Find post by text</label>\n        <button \n          type=\"button\"\n          className=\"show-all-button\"\n          onClick={showAll}\n        >\n          Show all\n        </button>\n      </div>\n      \n    </form>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\r\nimport \"../comments/Comment.css\";\r\n\r\nconst Comment = ({ comment }) => {\r\n  return (\r\n    <div className=\"comment\">\r\n      (<span className=\"highlitedText\">{comment.name}</span>, {comment.email})\r\n      <br />\r\n      {comment.body}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport \"../comments/Comment.css\";\r\n\r\nconst CommentList = ({ comments }) => {\r\n  return (\r\n    <div className=\"commentlist\">\r\n      <h3>Comments</h3>\r\n      {comments.map(comment => (\r\n        <Comment key={comment.id} comment={comment} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport \"../posts/Post.css\";\r\n\r\nconst Post = ({ post }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"bottom-line\">{post.title}</h2>\r\n      <p className=\"bottom-line\">{post.body}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport \"../user/User.css\";\r\n\r\nconst User = ({ user }) => {\r\n  return (\r\n    <>\r\n      <h3 className=\"user-title\">Author</h3>\r\n      <p className=\"user\">\r\n        <span className=\"highlitedText\">{user.name}</span>,{\" \"}\r\n        {`<${user.username}>`}, {user.address.zipcode}, {user.address.city},{\" \"}\r\n        {user.address.street}, {user.address.suite}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nimport CommentList from \"../comments/CommentList\";\r\nimport Post from \"../posts/Post\";\r\nimport User from \"../user/User\";\r\nimport \"../posts/Post.css\";\r\n\r\nconst PostList = ({ posts }) => {\r\n  return (\r\n    <div className=\"postlist\">\r\n      {posts.map(post => (\r\n        <div className=\"post\" key={post.id}>\r\n          <Post post={post} />\r\n          <User user={post.user} />\r\n          <CommentList comments={post.comments} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from 'react';\n\nimport MDSpinner from 'react-md-spinner';\nimport {\n  usersFromServer,\n  postsFromServer,\n  commentsFromServer,\n} from '../helper/Helper';\nimport Filter from '../filter/Filter';\nimport PostList from '../posts/PostList';\nimport './App.css';\n\nconst prepareData = (posts, users, comments) => {\n  return posts.map(currentPost => ({\n    ...currentPost,\n    user: users.find(user => user.id === currentPost.userId),\n    comments: comments.filter(comment => comment.postId === currentPost.id),\n  }));\n};\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    shownPosts: [],\n    btnVisible: true,\n    btnText: 'Load',\n    visible: false,\n  };\n\n  async getPosts() {\n    const posts = prepareData(await postsFromServer(), await usersFromServer(), await commentsFromServer());\n\n    this.setState({\n      posts,\n      shownPosts: posts,\n      btnVisible: false,\n    });\n  }\n\n  findPostByText = (text) => {\n    const findedPosts = this.state.posts.filter(post => post.title.includes(text) || post.body.includes(text));\n    this.setState({ shownPosts : findedPosts });\n  }\n\n  showAllPosts = () => {\n    this.setState({ shownPosts: this.state.posts });\n  }\n\n  render() {\n    return (\n      <div className=\"main-div\">\n        {this.state.btnVisible && (\n          <button\n            type=\"button\"\n            className=\"load-button\"\n            onClick={() => {\n              this.setState({ visible: true, btnText: 'Loading...' });\n              this.getPosts();\n            }}\n          >\n            {this.state.btnText}\n          </button>\n        )}\n\n        {this.state.visible && (\n          this.state.posts.length > 0 ? (\n            <>\n              <h1 className=\"main-title\">Dynamic list of posts</h1>\n              <Filter onFilter={this.findPostByText} showAll={this.showAllPosts} />\n              <PostList posts={this.state.shownPosts} />\n            </>\n          ) : (\n            <MDSpinner size={50} />\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const usersFromServer = () => {\n  return fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json());\n};\n\nexport const postsFromServer = () => {\n  return fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json());\n};\n\nexport const commentsFromServer = () => {\n  return fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n};\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"../src/mainApp/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}